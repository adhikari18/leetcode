/*
Reverse a singly linked list.

Example:

Input: 1->2->3->4->5->NULL
Output: 5->4->3->2->1->NULL
Follow up:

A linked list can be reversed either iteratively or recursively. Could you implement both?
*/
/*
Runtime: 96 ms, faster than 69.07% of C# online submissions for Reverse Linked List.
Memory Usage: 23.4 MB, less than 8.00% of C# online submissions for Reverse Linked List.
*/
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode ReverseList(ListNode head)
        {
            var current = head;
            ListNode previous = null;
            while (current != null)
            {
                var tempNext = current.next;
                current.next = previous;
                previous = current;
                current = tempNext;
            }

            return previous;
        }
}

/*
The count-and-say sequence is the sequence of integers with the first five terms as following:

1.     1
2.     11
3.     21
4.     1211
5.     111221
1 is read off as "one 1" or 11.
11 is read off as "two 1s" or 21.
21 is read off as "one 2, then one 1" or 1211.

Given an integer n where 1 ≤ n ≤ 30, generate the nth term of the count-and-say sequence.
*/
/*
Runtime: 92 ms, faster than 56.91% of C# online submissions for Count and Say.
Memory Usage: 27.6 MB, less than 6.25% of C# online submissions for Count and Say.
*/

using System;

namespace Leetcode
{

    public class Solution
    {
        public string CountAndSay(int n)
        {
            if (n == 0)
                return "";
            if (n == 1)
                return "1";
            string result = "1";
            for (int i = 1; i < n; i++)
            {
                string temp = string.Empty;
                int len = result.Length;
                for (int j = 0; j < len; j++)
                {
                    int count = 1;
                    while (j + 1 < len && result[j] == result[j + 1])
                    {
                        count++;
                        j++;
                    }
                    temp += count.ToString() + result[j];
                }
                result = temp;
            }

            return result;
        }
    }


    class Program
    {
        static void Main(string[] args)
        {
            var solution = new Solution();
            var result = solution.CountAndSay(5);
            Console.WriteLine(result);
        }
    }
}

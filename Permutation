/*
*/

/*
*/
/*
https://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/
https://www.programcreek.com/2013/02/leetcode-permutations-java/
*/

using System;
using System.Collections.Generic;

namespace Leetcode
{
    class Solution
    {
        public IList<IList<int>> Permute(int[] nums)
        {
            var result = new List<IList<int>>();

            DFS(result, nums, 0);
            return result;
        }

        private void DFS(List<IList<int>> result, int[] nums, int start)
        {
            if (start == nums.Length - 1)
            {
                var list = new List<int>();
                foreach (int num in nums)
                {
                    list.Add(num);
                }
                result.Add(list);
                return;
            }

            for (int i = start; i < nums.Length; i++)
            {
                Swap(nums, i, start);
                DFS(result, nums, start + 1);
                Swap(nums, i, start);
            }
        }

        private void Swap(int[] nums, int i, int j)
        {
            int temp = nums[i];
            nums[i] = nums[j];
            nums[j] = temp;
        }
    }

    class Permutation
    {
        static void Main(string[] args)
        {
            var solution = new Solution();

            var result = solution.Permute(new int[] { 1, 2, 3});
            Console.WriteLine(result);
        }
    }
}

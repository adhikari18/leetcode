//90. Subsets II
//https://leetcode.com/problems/subsets-ii/

public class Solution {
    public IList<IList<int>> SubsetsWithDup(int[] nums) {
        var result = new List<IList<int>>();
        Array.Sort(nums);
        backtrack(result, nums, new List<int>(), 0);        
        return result;
    }
    
    private void backtrack(IList<IList<int>> result, int[] nums, List<int> current, int index)
    {
        result.Add(new List<int>(current));
        for(var i = index; i < nums.Length; i++)
        {
            if(i > index && nums[i] == nums[i-1]) continue;
            current.Add(nums[i]);
            backtrack(result, nums, current, i+1);
            current.RemoveAt(current.Count - 1);
        }        
    }
}

//583. Delete Operation for Two Strings
//https://leetcode.com/problems/delete-operation-for-two-strings/
// # of deletions = # of places where both strings are different. Find the longest common subsequence 
//and â€‹subtract it from both the strings to find the elements that have to be deleted

public class Solution {
    public int MinDistance(string word1, string word2) {
        var dp = new int[word2.Length + 1];
        for(var i = 1; i <= word1.Length; i++)
        {
            var prev = 0;
            for(var j = 1; j <= word2.Length; j++)
            {
                var temp = dp[j];
                if(word1[i-1] == word2[j-1])
                    dp[j] = 1 + prev;
                else
                    dp[j] = Math.Max(dp[j - 1], dp[j]);
                prev = temp;
            }
        }
        var val = dp[word2.Length];
        return word1.Length + word2.Length - 2 * val;
    }
}

//938. Range Sum of BST
//https://leetcode.com/problems/range-sum-of-bst/

 //Iterative
public class Solution {
    public int RangeSumBST(TreeNode root, int L, int R) {
        var result = 0;
        if(root == null) return result;
        
        var queue = new Queue<TreeNode>();
        queue.Enqueue(root);
        
        while(queue.Count > 0)
        {
            var node = queue.Dequeue();
            if(node.val >= L && node.val <= R)
            result += node.val;
            
            if(node.left != null)
                queue.Enqueue(node.left);
            if(node.right != null)
                queue.Enqueue(node.right);
            
        }
        return result;
    }
}

//Recursive
 public int RangeSumBST(TreeNode root, int L, int R) {
        if(root == null) return 0;
        if(root.val > R) return RangeSumBST(root.left, L, R);
        if(root.val < L) return RangeSumBST(root.right, L, R);
        return root.val + RangeSumBST(root.left, L, R) + RangeSumBST(root.right, L, R);   
    }

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

/*
https://leetcode.com/problems/perfect-squares/
Given a positive integer n, find the least number of perfect square numbers (for example, 1, 4, 9, 16, ...) which sum to n.

Example 1:

Input: n = 12
Output: 3 
Explanation: 12 = 4 + 4 + 4.
Example 2:

Input: n = 13
Output: 2
Explanation: 13 = 4 + 9.
*/
/*
1     2     3     4     5     6     7     8     9     10      11    12      13      14      15      16
1*1   1+1   2+1   2*2   1+4   2+4   3+4   4+4   3*3   1+9     2+9   3+9     4+9     5+9     6+9     4*4
*/

    public class Solution
    {
        public int NumSquares(int n)
        {
            int[] dp = new int[n + 1];
            for (int i = 1; i <= n; i++)
            {
                dp[i] = int.MaxValue;
            }
            dp[0] = 0;
            for (int i = 0; i <= n; i++)
            {
                for (int j = 1; i + j * j <= n; j++)
                {
                    dp[i + j * j] = Math.Min(dp[i + j * j], dp[i] + 1);
                }
            }

            return dp[n];
        }
    }

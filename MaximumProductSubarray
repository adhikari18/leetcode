/*
https://leetcode.com/problems/maximum-product-subarray/
Given an integer array nums, find the contiguous subarray within an array (containing at least one number) which has the largest product.

Example 1:

Input: [2,3,-2,4]
Output: 6
Explanation: [2,3] has the largest product 6.
Example 2:

Input: [-2,0,-1]
Output: 0
Explanation: The result cannot be 2, because [-2,-1] is not a subarray.
*/
/*
*/
/*
Runtime: 92 ms, faster than 72.08% of C# online submissions for Maximum Product Subarray.
Memory Usage: 24.8 MB, less than 25.00% of C# online submissions for Maximum Product Subarray.
*/

public class Solution
{
    public int MaxProduct(int[] nums)
    {
        if (nums == null || nums.Length == 0)
            return 0;
        int maxProduct = nums[0];
        int maxTemp = nums[0];
        int minTemp = nums[0];
        for (int i = 1; i < nums.Length; i++)
        {
            int currentMaxTemp = nums[i] * maxTemp;
            int currentMinTemp = nums[i] * minTemp;
            maxTemp = Math.Max(Math.Max(currentMaxTemp, currentMinTemp), nums[i]);
            minTemp = Math.Min(Math.Min(currentMaxTemp, currentMinTemp), nums[i]);
            maxProduct = Math.Max(maxProduct, maxTemp);
        }
        return maxProduct;
    }
}

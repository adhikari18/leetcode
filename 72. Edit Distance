//72. Edit Distance
//https://leetcode.com/problems/edit-distance/
//if characters are same, its same as previous as nothing has to be done with this
//if its different, its the min of the replace, delete, insert + 1

public class Solution {
    public int MinDistance(string word1, string word2) {        
        var dp = new int[word2.Length + 1];
        for(var i = 0; i <= word2.Length; i++){
            dp[i] = i;
        }        
        for(var i = 1; i <= word1.Length; i++)
        {
            var pre = i - 1;
            dp[0] = i;
            for(var j = 1; j <= word2.Length; j++)
            {
                var temp = dp[j];
                if(word1[i - 1] == word2[j-1])
                    dp[j] = pre;
                else
                    dp[j] = Math.Min(Math.Min(dp[j], dp[j-1]), pre) + 1;
                
                pre = temp;
            }
        }
        return dp[word2.Length];            
    }
}

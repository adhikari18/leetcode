//953. Verifying an Alien Dictionary
//https://leetcode.com/problems/verifying-an-alien-dictionary/

/*
Build a transform mapping from order,
Find all alien words with letters in normal order.

For example, if we have order = "xyz..."
We can map the word "xyz" to "abc" or "123"
*/

public class Solution {
    public bool IsAlienSorted(string[] words, string order) {
        int[] dict = new int[26];
        for (int i = 0; i < dict.Length; i++) {
            int idx = order[i] - 'a';
            dict[idx] = i;
        }
        for (int i = 0; i < words.Length -1; i++) {
            if(Compare(words[i], words[i + 1], dict) > 0)
                return false;
        }

        return true;
    }

    private int Compare(string s1, string s2, int[] dict)
    {
        int i = 0;
        for (i = 0; i < Math.Min(s1.Length, s2.Length); i++) {
            if (dict[s1[i] - 'a'] > dict[s2[i] - 'a']) {
                return 1;
            } 
            if (dict[s1[i] - 'a'] < dict[s2[i] - 'a']) {
                return -1;
            }
        }
        return i == s1.Length ? -1 : 1;
    }
}


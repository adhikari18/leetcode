//622. Design Circular Queue
//https://leetcode.com/problems/design-circular-queue/

public class MyCircularQueue {
    
    int[] _queue;
    int _head;
    int _tail;
    int _capacity;
    /** Initialize your data structure here. Set the size of the queue to be k. */
    public MyCircularQueue(int k) {
        _queue = new int[k];
        _head = -1;
        _tail = -1;
        _capacity = k;
    }
    
    /** Insert an element into the circular queue. Return true if the operation is successful. */
    public bool EnQueue(int value) {
        if(IsFull())
            return false;
        else if(IsEmpty()){
            _head = _tail = 0;
        } else {
            _tail = IncreasePointer(_tail);
        }
        _queue[_tail] = value;
        return true;
    }
    
    /** Delete an element from the circular queue. Return true if the operation is successful. */
    public bool DeQueue() {
        if(IsEmpty()){
            return false;
        } 
        if(_head == _tail){
            _head = _tail = -1;
        }
        else {
            _head = IncreasePointer(_head);
        }
        return true;            
    }
    
    /** Get the front item from the queue. */
    public int Front() {
        return _head < 0 ? -1 : _queue[_head];
    }
    
    /** Get the last item from the queue. */
    public int Rear() {
        return _tail < 0 ? -1 : _queue[_tail];
    }
    
    /** Checks whether the circular queue is empty or not. */
    public bool IsEmpty() {
     return _head == -1 && _tail == -1;   
    }
    
    /** Checks whether the circular queue is full or not. */
    public bool IsFull() {
        return !IsEmpty() && (IncreasePointer(_tail) == _head);
    }
    
    private int IncreasePointer(int pointer){
        return ++pointer % _capacity;
    }
}

/**
 * Your MyCircularQueue object will be instantiated and called as such:
 * MyCircularQueue obj = new MyCircularQueue(k);
 * bool param_1 = obj.EnQueue(value);
 * bool param_2 = obj.DeQueue();
 * int param_3 = obj.Front();
 * int param_4 = obj.Rear();
 * bool param_5 = obj.IsEmpty();
 * bool param_6 = obj.IsFull();
 */

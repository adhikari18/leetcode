/*
Return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.
*/

/*
Runtime: 80 ms, faster than 66.37% of C# online submissions for Implement strStr().
Memory Usage: 21.8 MB, less than 6.67% of C# online submissions for Implement strStr().
*/
namespace Leetcode
{
    public class Solution
    {
        public int StrStr(string haystack, string needle)
        {
            if (haystack == needle)
            {
                return 0;
            }
            if (string.IsNullOrEmpty(haystack))
                return -1;
            if (string.IsNullOrEmpty(needle))
                return 0;

            for (int i = 0; i + needle.Length <= haystack.Length; i++)
            {
                if (haystack.Substring(i, needle.Length) == needle)
                    return i;
            }

            return -1;
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            var solution = new Solution();
            //var result = solution.StrStr("aaa", "a");
            var result = solution.StrStr("mississippi", "issip");
        }
    }
}

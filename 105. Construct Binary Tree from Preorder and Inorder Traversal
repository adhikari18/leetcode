//https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/
//105. Construct Binary Tree from Preorder and Inorder Traversal
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode BuildTree(int[] preorder, int[] inorder) {
        return Helper(preorder, inorder, 0, 0, inorder.Length - 1);
    }
    
    private TreeNode Helper(int[] preorder, int[] inorder, int preStart , int inStart, int inEnd)
    {
        if(preStart >= preorder.Length || inStart > inEnd)
            return null;
            
        TreeNode node = new TreeNode(preorder[preStart]);
        
        int inIndex = 0;
        for(var i = 0; i < inorder.Length; i++)
        {
            if(inorder[i] == node.val)
            {
                inIndex = i;
                break;
            }
        }
        
        node.left = Helper(preorder, inorder, preStart + 1, inStart, inIndex - 1);
        node.right = Helper(preorder, inorder, preStart + inIndex - inStart + 1, inIndex + 1, inEnd);        
        
        return node;
    }
}


